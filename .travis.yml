language: objective-c
branches:
  except:
    - /^v[0-9]/
env:
  global:
    - GIT_COMMITTER_NAME=rcmdnk
    - GIT_COMMITTER_EMAIL=rcmdnk@gmail.com
    - GIT_AUTHOR_NAME=rcmdnk
    - GIT_AUTHOR_EMAIL=rcmdnk@gmail.com
    - PAGER=cat
    - EDITOR=cat # for brew-file edit test
    - VISUAL=cat
  matrix:
    - coveralls=coveralls-python
    #- coveralls=python-coveralls
before_install:
  - '[ "$TRAVIS_PULL_REQUEST" = "false" ] && openssl aes-256-cbc -K $encrypted_43fa9741277b_key -iv $encrypted_43fa9741277b_iv -in .travis_rsa.enc -out .travis_rsa -d || :'
  - '[ "$TRAVIS_PULL_REQUEST" = "false" ] && cp .travis_rsa ~/.ssh/id_rsa || :'
  - '[ "$TRAVIS_PULL_REQUEST" = "false" ] && chmod 600 ~/.ssh/id_rsa || :'
  - '[ "$TRAVIS_PULL_REQUEST" = "false" ] && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config || :'
  - version=""
  - 'if [ $TRAVIS_BRANCH = master ];then version="--HEAD";elif [ $TRAVIS_BRANCH = bash ];then version="--bash";fi'
  #- brew update >& /dev/null && brew upgrade >& /dev/null # takes too much time... courses fail...
  #- brew update >& /dev/null # even this make timeout, at brew-file update
  - brewprefix=$(brew --prefix)
install:
  - '[ "$coveralls" = "coveralls-python" ] && sudo pip install coveralls >/dev/null || :'
  - '[ "$coveralls" = "python-coveralls" ] && sudo pip -e . --use-mirrors >/dev/null || :'
  - brew list > brewlist.orig
  - brew install rcmdnk/file/brew-file $version
  - brew tap homebrew/dupes # needed, as current travis environment is old and has some packages which are now under dupes, but travis environment doesn't have dupes tap.
  - cd ../
  - git clone git@github.com:rcmdnk/BrewfileTest
  - cd BrewfileTest
  - cp ../homebrew-file/BrewfileTest ./Brewfile
  - cp ../homebrew-file/BrewfileExt ./BrewfileExt
  - cp ../homebrew-file/BrewfileHome ~/.Brewfile
  - git add -A && git commit -a -m "init" && git push -f || echo nothing to be done
  - cd ../homebrew-file
  - rm -rf ../BrewfileTest
before_script:
  - touch "$brewprefix/Library/Brewfile"
  - installed_brew=$(which brew-file)
  - exe=$(pwd)/bin/brew-file
  - git config --global push.default simple # to suppress git warning
script:
  # Check differences between checked out's version and brew installed version
  - '[ "$version" != "" ] && diff $installed_brew $exe || :'
  - '[ "$version" != "" ] && brew file help | ( $exe help | diff /dev/fd/3 -) 3<&0 || :'
  - '[ "$version" != "" ] && brew file version | ( $exe version | diff /dev/fd/3 -) 3<&0 || :'
  # Check with old Python (expect 2.7.5)
  - python --version
  - 'coverage run --parallel-mode $exe brew install tig --HEAD --with-docs | :' # old version can't use hyphen options at brew file brew.
  # Install the latest version of Python
  # Need to delete pip staffs to avoid conflicts.
  - rm -rf /usr/local/lib/python2.7/site-packages
  - rm -rf /usr/local/bin/easy_install
  - rm -rf /usr/local/bin/easy_install-2.7
  - rm -rf /usr/local/bin/pip
  - rm -rf /usr/local/bin/pip2
  - rm -rf /usr/local/bin/pip2.7
  - coverage run --parallel-mode $exe -V 2 brew install python
  - sudo pip uninstall -y coveralls
  - sudo pip uninstall -y coverage
  - sudo pip install coveralls
  - python --version
  - hash -r
  - python --version
  # Sanity checks
  - coverage run --parallel-mode $exe version
  - coverage run --parallel-mode $exe --version
  - coverage run --parallel-mode $exe help
  - coverage run --parallel-mode $exe commands
  - 'coverage run --parallel-mode $exe || :'
  - coverage run --parallel-mode $exe brew list >/dev/null
  - coverage run --parallel-mode $exe init --preupdate -y
  - coverage run --parallel-mode $exe update -y -V 0
  - coverage run --parallel-mode $exe test -V 2
  # Cask tests
  - coverage run --parallel-mode $exe cask install firefox
  - coverage run --parallel-mode $exe install macvim # Application installed by brew command, instead of cask
  - coverage run --parallel-mode $exe casklist -V 0
  - coverage run --parallel-mode $exe brew rm brew-cask
  - coverage run --parallel-mode $exe brew untap caskroom/cask
  - coverage run --parallel-mode $exe casklist -V 0
  - rm $($exe get_files)
  - coverage run --parallel-mode $exe edit -y
  - coverage run --parallel-mode $exe brew uninstall brew-cask
  - coverage run --parallel-mode $exe cask_upgrade -C -V 0
  - coverage run --parallel-mode $exe install brew-cask
  - coverage run --parallel-mode $exe cask_upgrade -C -V 0
  - export HOMEBREW_CASK_OPTS="--appdir=~/Applications --caskroom=/opt/homebrew-cask/Caskroom"
  - coverage run --parallel-mode $exe cask_upgrade -C -V 0
  - coverage run --parallel-mode $exe cask_upgrade -V 0
  - export HOMEBREW_CASK_OPTS="cask_opt_error_test"
  - 'coverage run --parallel-mode $exe cask_upgrade -C -V 0 || :'
  - export HOMEBREW_CASK_OPTS="--appdir=~/Applications --caskroom=/opt/homebrew-cask/Caskroom"
  - coverage run --parallel-mode $exe casklist -V 0
  # Wrong file/command tests
  - 'coverage run --parallel-mode $exe -f BrewfileWrong pull -y -V 0 || :'
  - 'coverage run --parallel-mode $exe -f BrewfileWrong install -y -V 0 || :'
  - 'coverage run --parallel-mode $exe wrongcommand || :'
  # Use test repository
  - coverage run --parallel-mode $exe set_repo -r rcmdnk/BrewfileTest -y -V 2
  - coverage run --parallel-mode $exe set_repo -r rcmdnk/BrewfileTest -y -V 2
  - coverage run --parallel-mode $exe get_files
  - cp $brewprefix/Library/rcmdnk_BrewfileTest/Brewfile .
  - coverage run --parallel-mode $exe install -V 2
  - '[ "$TRAVIS_PULL_REQUEST" = "false" ] && coverage run --parallel-mode $exe update -y -U -V 2'
  - '[ "$TRAVIS_PULL_REQUEST" = "false" ] && coverage run --parallel-mode $exe update -y'
  # Other sanity checks
  - coverage run --parallel-mode $exe brew noinit list
  - coverage run --parallel-mode $exe brew list
  - coverage run --parallel-mode $exe brew uninstall lastpass-cli
  - coverage run --parallel-mode $exe brew install lastpass-cli --with-doc
  - coverage run --parallel-mode $exe brew install dash
  - coverage run --parallel-mode $exe brew tap rcmdnk/mytest
  - coverage run --parallel-mode $exe brew install mytest2
  - coverage run --parallel-mode $exe brew install mytest2
  - coverage run --parallel-mode $exe brew rm mytest2
  - coverage run --parallel-mode $exe brew untap rcmdnk/mytest
  - coverage run --parallel-mode $exe brew install rcmdnk/mytest/mytest2
  - coverage run --parallel-mode $exe brew tap rcmdnk/mytest
  - coverage run --parallel-mode $exe brew rm mytest2
  - coverage run --parallel-mode $exe brew untap rcmdnk/mytest
  - coverage run --parallel-mode $exe brew install rcmdnk/mytest/mytest2 --HEAD
  - 'coverage run --parallel-mode $exe brew untap rcmdnk/notexist || :'
  - coverage run --parallel-mode $exe brew cask install appcleaner
  - coverage run --parallel-mode $exe brew cask install appcleaner
  - coverage run --parallel-mode $exe brew cask rm appcleaner
  - command brew cask install appcleaner
  - coverage run --parallel-mode $exe brew cask rm appcleaner
  - coverage run --parallel-mode $exe brew uninstall pip-asciinema
  - coverage run --parallel-mode $exe brew help
  - 'coverage run --parallel-mode $exe brew wrong_cmd || :'
  - coverage run --parallel-mode $exe brew untap rcmdnk/rcmdnkcask
  # brewdler format tests
  - coverage run --parallel-mode $exe init -F brewdler -y -V 2
  - coverage run --parallel-mode $exe install -F brewdler
  - echo "appstore 'KeyNotes'" >> $brewprefix/Library/rcmdnk_BrewfileTest/Brewfile
  - echo "file 'BrewfileExt'" >> $brewprefix/Library/rcmdnk_BrewfileTest/Brewfile
  - coverage run --parallel-mode $exe -F brewdler brew rm lastpass-cli
  # Clean up tests
  - echo "brew brew-file $version" > $brewprefix/Library/rcmdnk_BrewfileTest/Brewfile
  - echo "brew python" >> $brewprefix/Library/rcmdnk_BrewfileTest/Brewfile
  - echo "file BrewfileExt" >> $brewprefix/Library/rcmdnk_BrewfileTest/Brewfile
  - echo "brew bash" >> $brewprefix/Library/rcmdnk_BrewfileTest/BrewfileExt
  - while read p;do echo "brew $p" >> $brewprefix/Library/rcmdnk_BrewfileTest/Brewfile;done < brewlist.orig
  - coverage run --parallel-mode $exe clean
  - coverage run --parallel-mode $exe clean -C
  - coverage run --parallel-mode $exe init -y -V 2
  # Wrong command test
  - echo "wrong command" > Brewfile $brewprefix/Library/rcmdnk_BrewfileTest/Brewfile
  - 'coverage run --parallel-mode $exe install | :'
  # Push current Brwefile in homebrew-file to BrwefileTest
  - cp Brewfile $brewprefix/Library/rcmdnk_BrewfileTest/Brewfile
  - '[ "$TRAVIS_PULL_REQUEST" = "false" ] && coverage run --parallel-mode $exe push -V 0'
  # Test with brew-wrap
  - source $(brew --prefix)/etc/brew-wrap
  - type brew
  - brew list
  - brew install hub
  - brew noinit install stow
  # send coverage result to coveralls
  - coverage combine # should be done before removing brew-file
  - coveralls
  # Install test
  - rm -rf $brewprefix/bin/brew $brewprefix/Library $brewprefix/Cellar
  - rm -rf $brewprefix/.git*
  - curl -fsSL https://raw.github.com/rcmdnk/homebrew-file/install/install.sh |sh
  - brew help
  - brew file help
notifications:
  email:
    recipients:
      - rcmdnk@gmail.com
    on_success: change
    on_failure: always

